{
  "openapi": "3.0.3",
  "info": {
    "title": "Edulure Platform API",
    "version": "1.50.0",
    "description": "Production-ready API contracts for the Edulure platform. All responses follow the `{ success, message, data, meta }` envelope."
  },
  "servers": [
    {
      "url": "https://api.edulure.com",
      "description": "Production"
    },
    {
      "url": "http://localhost:{port}",
      "description": "Local development",
      "variables": {
        "port": {
          "default": "4000"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "StandardResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {},
          "meta": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "AuthTokens": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "tokenType": {
            "type": "string",
            "example": "Bearer"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "tokenType",
          "expiresAt"
        ]
      },
      "SessionEnvelope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUsedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "instructor",
              "admin"
            ]
          },
          "age": {
            "type": "integer",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "firstName",
          "email",
          "role",
          "createdAt",
          "updatedAt"
        ]
      },
      "Community": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "coverImageUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "enum": [
              "public",
              "private"
            ]
          },
          "ownerId": {
            "type": "integer"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true
          },
          "stats": {
            "type": "object",
            "properties": {
              "members": {
                "type": "integer"
              },
              "resources": {
                "type": "integer"
              },
              "posts": {
                "type": "integer"
              },
              "channels": {
                "type": "integer"
              },
              "lastActivityAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          },
          "membership": {
            "type": "object",
            "nullable": true,
            "properties": {
              "role": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "slug",
          "visibility",
          "ownerId",
          "metadata",
          "stats",
          "createdAt",
          "updatedAt"
        ]
      },
      "CommunityChannel": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "slug": { "type": "string" },
          "type": { "type": "string" },
          "description": { "type": "string", "nullable": true },
          "isDefault": { "type": "boolean" },
          "metadata": { "type": "object", "additionalProperties": true },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "name", "slug", "type", "isDefault", "metadata", "createdAt", "updatedAt"]
      },
      "CommunityPost": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "type": { "type": "string" },
          "title": { "type": "string", "nullable": true },
          "body": { "type": "string" },
          "publishedAt": { "type": "string", "format": "date-time", "nullable": true },
          "scheduledAt": { "type": "string", "format": "date-time", "nullable": true },
          "visibility": { "type": "string" },
          "status": { "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } },
          "channel": { "$ref": "#/components/schemas/CommunityChannel", "nullable": true },
          "community": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": { "type": "integer" },
              "name": { "type": "string" },
              "slug": { "type": "string" }
            }
          },
          "author": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "name": { "type": "string" },
              "role": { "type": "string" },
              "avatarUrl": { "type": "string", "format": "uri" }
            },
            "required": ["id", "name", "avatarUrl"]
          },
          "stats": {
            "type": "object",
            "properties": {
              "reactions": { "type": "integer" },
              "reactionBreakdown": { "type": "object", "additionalProperties": { "type": "integer" } },
              "comments": { "type": "integer" }
            }
          },
          "metadata": { "type": "object", "additionalProperties": true }
        },
        "required": ["id", "type", "body", "visibility", "status", "tags", "author", "stats", "metadata"]
      },
      "CommunityResource": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "communityId": { "type": "integer" },
          "title": { "type": "string" },
          "description": { "type": "string", "nullable": true },
          "resourceType": { "type": "string" },
          "assetId": { "type": "integer", "nullable": true },
          "asset": {
            "type": "object",
            "nullable": true,
            "properties": {
              "publicId": { "type": "string" },
              "filename": { "type": "string" }
            }
          },
          "linkUrl": { "type": "string", "format": "uri", "nullable": true },
          "classroomReference": { "type": "string", "nullable": true },
          "tags": { "type": "array", "items": { "type": "string" } },
          "visibility": { "type": "string" },
          "status": { "type": "string" },
          "metadata": { "type": "object", "additionalProperties": true },
          "publishedAt": { "type": "string", "format": "date-time", "nullable": true },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "createdBy": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "name": { "type": "string" },
              "role": { "type": "string", "nullable": true },
              "avatarUrl": { "type": "string", "format": "uri" }
            },
            "required": ["id", "name", "avatarUrl"]
          }
        },
        "required": [
          "id",
          "communityId",
          "title",
          "resourceType",
          "tags",
          "visibility",
          "status",
          "metadata",
          "createdAt",
          "updatedAt",
          "createdBy"
        ]
      },
      "CommunityDetail": {
        "allOf": [
          { "$ref": "#/components/schemas/Community" },
          {
            "type": "object",
            "properties": {
              "channels": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/CommunityChannel" }
              }
            }
          }
        ]
      },
      "ContentAsset": {
        "type": "object",
        "properties": {
          "publicId": {
            "type": "string"
          },
          "originalFilename": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "powerpoint",
              "ebook",
              "pdf",
              "document",
              "video"
            ]
          },
          "status": {
            "type": "string"
          },
          "visibility": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "publicId",
          "originalFilename",
          "type",
          "status",
          "visibility"
        ]
      },
      "UploadSessionResponse": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/ContentAsset"
          },
          "upload": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "bucket": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "url",
              "bucket",
              "key",
              "expiresAt"
            ]
          }
        },
        "required": [
          "asset",
          "upload"
        ]
      },
      "ViewerToken": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "watermark": {
            "type": "string"
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "asset": {
            "$ref": "#/components/schemas/ContentAsset"
          }
        },
        "required": [
          "url",
          "expiresAt",
          "watermark",
          "asset"
        ]
      },
      "ContentAnalytics": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/ContentAsset"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "eventType": {
                  "type": "string"
                },
                "total": {
                  "type": "integer"
                }
              }
            }
          },
          "outputs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string"
                },
                "storageKey": {
                  "type": "string"
                },
                "storageBucket": {
                  "type": "string"
                }
              }
            }
          },
          "recentActivity": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "eventType": {
                  "type": "string"
                },
                "occurredAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "progressSummary": {
            "type": "object",
            "nullable": true,
            "properties": {
              "readers": {
                "type": "integer"
              },
              "averageProgress": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "asset",
          "events"
        ]
      },
      "VerificationStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "verified"
            ]
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "status",
          "emailVerifiedAt"
        ]
      },
      "PaymentTotals": {
        "type": "object",
        "properties": {
          "subtotal": {
            "type": "integer",
            "description": "Subtotal before discounts and taxes, expressed in cents."
          },
          "discount": {
            "type": "integer",
            "description": "Discount amount applied in cents."
          },
          "tax": {
            "type": "integer",
            "description": "Tax amount applied in cents."
          },
          "total": {
            "type": "integer",
            "description": "Total payable amount in cents."
          }
        },
        "required": [
          "subtotal",
          "discount",
          "tax",
          "total"
        ]
      },
      "PaymentLineItemInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "unitAmount": {
            "type": "integer",
            "minimum": 50,
            "description": "Unit price in cents."
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          },
          "taxExempt": {
            "type": "boolean",
            "default": false
          },
          "metadata": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "unitAmount"
        ]
      },
      "PaymentIntentCreateRequest": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "stripe",
              "paypal"
            ]
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentLineItemInput"
            }
          },
          "couponCode": {
            "type": "string",
            "nullable": true
          },
          "tax": {
            "type": "object",
            "nullable": true,
            "properties": {
              "country": {
                "type": "string",
                "description": "Two-letter country code."
              },
              "region": {
                "type": "string",
                "nullable": true
              },
              "postalCode": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "country"
            ]
          },
          "entity": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "description": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          "metadata": {
            "type": "object",
            "nullable": true
          },
          "receiptEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "paypal": {
            "type": "object",
            "nullable": true,
            "properties": {
              "returnUrl": {
                "type": "string",
                "format": "uri"
              },
              "cancelUrl": {
                "type": "string",
                "format": "uri"
              },
              "brandName": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "returnUrl",
              "cancelUrl"
            ]
          }
        },
        "required": [
          "provider",
          "items"
        ]
      },
      "PaymentIntentCreateResponse": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "stripe",
              "paypal"
            ]
          },
          "paymentId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "approvalUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "totals": {
            "$ref": "#/components/schemas/PaymentTotals"
          }
        },
        "required": [
          "provider",
          "paymentId",
          "status",
          "totals"
        ]
      },
      "PaymentIntentRecord": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "amountSubtotal": {
            "type": "integer"
          },
          "amountDiscount": {
            "type": "integer"
          },
          "amountTax": {
            "type": "integer"
          },
          "amountTotal": {
            "type": "integer"
          },
          "amountRefunded": {
            "type": "integer"
          },
          "taxBreakdown": {
            "type": "object"
          },
          "metadata": {
            "type": "object"
          },
          "couponId": {
            "type": "integer",
            "nullable": true
          },
          "entityType": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          },
          "receiptEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "capturedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "failureCode": {
            "type": "string",
            "nullable": true
          },
          "failureMessage": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "paymentId",
          "provider",
          "status",
          "currency",
          "amountSubtotal",
          "amountDiscount",
          "amountTax",
          "amountTotal",
          "amountRefunded",
          "metadata",
          "entityType",
          "entityId",
          "createdAt",
          "updatedAt"
        ]
      },
      "PaymentSummaryEntry": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "gross": {
            "type": "integer"
          },
          "discount": {
            "type": "integer"
          },
          "net": {
            "type": "integer"
          },
          "tax": {
            "type": "integer"
          },
          "refunded": {
            "type": "integer"
          },
          "captured": {
            "type": "integer"
          }
        },
        "required": [
          "currency",
          "gross",
          "discount",
          "net",
          "tax",
          "refunded",
          "captured"
        ]
      },
      "CouponPublic": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "type": "string",
            "enum": [
              "percentage",
              "fixed_amount"
            ]
          },
          "discountValue": {
            "type": "integer"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "maxRedemptions": {
            "type": "integer",
            "nullable": true
          },
          "perUserLimit": {
            "type": "integer",
            "nullable": true
          },
          "timesRedeemed": {
            "type": "integer"
          }
        },
        "required": [
          "code",
          "name",
          "discountType",
          "discountValue",
          "status",
          "timesRedeemed"
        ]
      },
      "PaymentRefundRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "minimum": 1,
            "description": "Optional refund amount expressed in cents."
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health probe",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "503": {
            "description": "Downstream dependency failure"
          }
        }
      }
    },
    "/api/payments": {
      "post": {
        "summary": "Create Stripe or PayPal payment intent",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment intent created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PaymentIntentCreateResponse"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          },
          "404": {
            "description": "Coupon not found or inactive"
          },
          "409": {
            "description": "Coupon redemption limit reached"
          },
          "422": {
            "description": "Validation error"
          },
          "502": {
            "description": "Payment provider error"
          }
        }
      }
    },
    "/api/payments/paypal/{paymentId}/capture": {
      "post": {
        "summary": "Capture an approved PayPal order",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PayPal capture completed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PaymentIntentRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Capture not allowed for current status"
          },
          "401": {
            "description": "Missing or invalid token"
          },
          "404": {
            "description": "Payment intent not found"
          },
          "502": {
            "description": "PayPal returned an error"
          }
        }
      }
    },
    "/api/payments/{paymentId}/refunds": {
      "post": {
        "summary": "Issue a Stripe or PayPal refund",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refund accepted",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PaymentIntentRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Payment intent not found"
          },
          "422": {
            "description": "Invalid refund amount"
          },
          "502": {
            "description": "Payment provider error"
          }
        }
      }
    },
    "/api/payments/reports/summary": {
      "get": {
        "summary": "Finance summary by currency",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Three-letter ISO currency filter"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Finance summary generated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PaymentSummaryEntry"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "422": {
            "description": "Invalid filter parameters"
          }
        }
      }
    },
    "/api/payments/coupons/{code}": {
      "get": {
        "summary": "Retrieve coupon details",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coupon fetched",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CouponPublic"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          },
          "404": {
            "description": "Coupon not found"
          },
          "422": {
            "description": "Invalid coupon code"
          }
        }
      }
    },
    "/api/payments/webhooks/stripe": {
      "post": {
        "summary": "Stripe webhook receiver",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Stripe webhook payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "received": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Signature validation failed"
          },
          "500": {
            "description": "Webhook processing error"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firstName",
                  "email",
                  "password"
                ],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 120
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "description": "Minimum 12 characters with upper, lower, number, and symbol"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "user",
                      "instructor",
                      "admin"
                    ]
                  },
                  "age": {
                    "type": "integer",
                    "minimum": 16,
                    "maximum": 120
                  },
                  "address": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "user",
                            "verification"
                          ],
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/User"
                            },
                            "verification": {
                              "$ref": "#/components/schemas/VerificationStatus"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Email already exists"
          },
          "422": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Authenticate user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "user",
                            "verification",
                            "tokens",
                            "session"
                          ],
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/User"
                            },
                            "verification": {
                              "$ref": "#/components/schemas/VerificationStatus"
                            },
                            "tokens": {
                              "$ref": "#/components/schemas/AuthTokens"
                            },
                            "session": {
                              "$ref": "#/components/schemas/SessionEnvelope"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          },
          "422": {
            "description": "Validation error"
          },
          "403": {
            "description": "Email verification required"
          },
          "423": {
            "description": "Account locked"
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "summary": "Refresh session tokens",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "user",
                            "verification",
                            "tokens",
                            "session"
                          ],
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/User"
                            },
                            "verification": {
                              "$ref": "#/components/schemas/VerificationStatus"
                            },
                            "tokens": {
                              "$ref": "#/components/schemas/AuthTokens"
                            },
                            "session": {
                              "$ref": "#/components/schemas/SessionEnvelope"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Refresh token missing"
          },
          "401": {
            "description": "Refresh token invalid or expired"
          },
          "422": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Revoke current session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Session revoked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "revoked"
                          ],
                          "properties": {
                            "revoked": {
                              "type": "boolean"
                            },
                            "reason": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          }
        }
      }
    },
    "/api/auth/logout-all": {
      "post": {
        "summary": "Revoke other active sessions",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "includeCurrent": {
                    "type": "boolean",
                    "description": "Also revoke the session used for this request",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sessions revoked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "revokedCount",
                            "revokedSessionIds"
                          ],
                          "properties": {
                            "revokedCount": {
                              "type": "integer"
                            },
                            "revokedSessionIds": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          },
          "422": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Current user profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "List users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/api/communities": {
      "get": {
        "summary": "Communities for current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Communities retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          }
        }
      },
      "post": {
        "summary": "Create community",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 150
                  },
                  "description": {
                    "type": "string"
                  },
                  "coverImageUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "public",
                      "private"
                    ],
                    "default": "public"
                  },
                  "metadata": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Community created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "409": {
            "description": "Community slug already exists"
          }
        }
      }
    },
    "/api/communities/feed": {
      "get": {
        "summary": "Aggregated community feed",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "default": 1 }
          },
          {
            "name": "perPage",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "maximum": 100, "default": 10 }
          },
          {
            "name": "postType",
            "in": "query",
            "schema": { "type": "string", "enum": ["update", "event", "resource", "classroom", "poll"] },
            "required": false
          },
          {
            "name": "visibility",
            "in": "query",
            "schema": { "type": "string", "enum": ["public", "members", "admins"] },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Feed retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/StandardResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/CommunityPost" }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "type": "object",
                              "properties": {
                                "page": { "type": "integer" },
                                "perPage": { "type": "integer" },
                                "total": { "type": "integer" },
                                "pageCount": { "type": "integer" }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": { "description": "Missing or invalid token" },
          "422": { "description": "Validation error" }
        }
      }
    },
    "/api/communities/{communityId}": {
      "get": {
        "summary": "Community detail",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Community detail retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/StandardResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CommunityDetail" }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": { "description": "Missing or invalid token" },
          "403": { "description": "Community is private" },
          "404": { "description": "Community not found" }
        }
      }
    },
    "/api/communities/{communityId}/posts": {
      "get": {
        "summary": "Community feed",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "default": 1 }
          },
          {
            "name": "perPage",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "maximum": 100, "default": 10 }
          },
          {
            "name": "channelId",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1 },
            "required": false
          },
          {
            "name": "postType",
            "in": "query",
            "schema": { "type": "string", "enum": ["update", "event", "resource", "classroom", "poll"] }
          }
        ],
        "responses": {
          "200": {
            "description": "Community feed retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/StandardResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/CommunityPost" }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "type": "object",
                              "properties": {
                                "page": { "type": "integer" },
                                "perPage": { "type": "integer" },
                                "total": { "type": "integer" },
                                "pageCount": { "type": "integer" }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": { "description": "Missing or invalid token" },
          "403": { "description": "Community is private" },
          "404": { "description": "Community not found" },
          "422": { "description": "Validation error" }
        }
      },
      "post": {
        "summary": "Create community post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channelId": { "type": "integer" },
                  "postType": { "type": "string", "enum": ["update", "event", "resource", "classroom", "poll"] },
                  "title": { "type": "string" },
                  "body": { "type": "string" },
                  "tags": { "type": "array", "items": { "type": "string" } },
                  "visibility": { "type": "string", "enum": ["public", "members", "admins"] },
                  "status": { "type": "string", "enum": ["draft", "scheduled", "published"] },
                  "scheduledAt": { "type": "string", "format": "date-time" },
                  "publishedAt": { "type": "string", "format": "date-time" },
                  "metadata": { "type": "object" }
                },
                "required": ["body"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/StandardResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CommunityPost" }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": { "description": "Missing or invalid token" },
          "403": { "description": "Insufficient permissions" },
          "404": { "description": "Community not found" },
          "422": { "description": "Validation error" }
        }
      }
    },
    "/api/communities/{communityId}/resources": {
      "get": {
        "summary": "Community resources",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "maximum": 50, "default": 10 }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "default": 0 }
          },
          {
            "name": "resourceType",
            "in": "query",
            "schema": { "type": "string", "enum": ["content_asset", "external_link", "document", "classroom_session"] }
          }
        ],
        "responses": {
          "200": {
            "description": "Resources retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/StandardResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/CommunityResource" }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "pagination": {
                              "type": "object",
                              "properties": {
                                "limit": { "type": "integer" },
                                "offset": { "type": "integer" },
                                "total": { "type": "integer" }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": { "description": "Missing or invalid token" },
          "403": { "description": "Community is private" },
          "404": { "description": "Community not found" },
          "422": { "description": "Validation error" }
        }
      },
      "post": {
        "summary": "Create community resource",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "communityId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "resourceType": { "type": "string", "enum": ["content_asset", "external_link", "document", "classroom_session"] },
                  "assetId": { "type": "integer" },
                  "linkUrl": { "type": "string", "format": "uri" },
                  "classroomReference": { "type": "string" },
                  "tags": { "type": "array", "items": { "type": "string" } },
                  "visibility": { "type": "string", "enum": ["members", "admins"] },
                  "status": { "type": "string", "enum": ["draft", "published"] },
                  "publishedAt": { "type": "string", "format": "date-time" },
                  "metadata": { "type": "object" }
                },
                "required": ["title", "resourceType"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Resource created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/StandardResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CommunityResource" }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": { "description": "Missing or invalid token" },
          "403": { "description": "Insufficient permissions" },
          "404": { "description": "Community not found" },
          "422": { "description": "Validation error" }
        }
      }
    },
    "/api/content/assets": {
      "get": {
        "summary": "List content assets",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assets returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          }
        }
      }
    },
    "/api/content/assets/upload-session": {
      "post": {
        "summary": "Create signed upload session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "filename",
                  "mimeType",
                  "size"
                ],
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "filename": {
                    "type": "string"
                  },
                  "mimeType": {
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "checksum": {
                    "type": "string"
                  },
                  "visibility": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Upload session created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          },
          "422": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/content/assets/{assetId}/ingest": {
      "post": {
        "summary": "Confirm upload and queue ingestion",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checksum": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asset queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid token"
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "422": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/content/assets/{assetId}": {
      "get": {
        "summary": "Retrieve content asset",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "404": {
            "description": "Asset not found"
          }
        }
      }
    },
    "/api/content/assets/{assetId}/viewer-token": {
      "get": {
        "summary": "Generate viewer token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viewer token issued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Asset not found"
          }
        }
      }
    },
    "/api/content/assets/{assetId}/progress": {
      "get": {
        "summary": "Retrieve ebook progress",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Progress retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "404": {
            "description": "Asset not found"
          }
        }
      },
      "post": {
        "summary": "Update ebook progress",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "progressPercent": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "lastLocation": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Progress stored"
          },
          "404": {
            "description": "Asset not found"
          }
        }
      }
    },
    "/api/content/assets/{assetId}/events": {
      "post": {
        "summary": "Record asset event",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "eventType"
                ],
                "properties": {
                  "eventType": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event captured"
          },
          "404": {
            "description": "Asset not found"
          }
        }
      }
    },
    "/api/content/assets/{assetId}/analytics": {
      "get": {
        "summary": "Content analytics",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Asset not found"
          }
        }
      }
    },
    "/api/auth/verify-email": {
      "post": {
        "summary": "Confirm email ownership",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Verification token received via email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "user",
                            "verification"
                          ],
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/User"
                            },
                            "verification": {
                              "$ref": "#/components/schemas/VerificationStatus"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "410": {
            "description": "Token expired or already used"
          },
          "422": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/auth/resend-verification": {
      "post": {
        "summary": "Resend verification email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resend processed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandardResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "delivered",
                            "expiresAt"
                          ],
                          "properties": {
                            "delivered": {
                              "type": "boolean"
                            },
                            "expiresAt": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "422": {
            "description": "Validation error"
          }
        }
      }
    }
  }
}
