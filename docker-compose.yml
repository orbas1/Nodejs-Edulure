version: "3.9"
services:
  postgres:
    image: postgres:15.4
    profiles:
      - dev
      - staging
      - prod
    environment:
      POSTGRES_USER: edulure
      POSTGRES_PASSWORD: edulure
      POSTGRES_DB: edulure
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "edulure"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile.backend
    profiles:
      - dev
      - staging
      - prod
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://edulure:edulure@postgres:5432/edulure
      PORT: 8080
      CORS_ALLOWED_ORIGINS: http://localhost:3000
      METRICS_USERNAME: metrics
      METRICS_PASSWORD: metrics-pass-123
      METRICS_ALLOWED_IPS: "*"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"

  prometheus:
    image: prom/prometheus:v2.54.1
    profiles: ["observability"]
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=72h"
    volumes:
      - prometheus_data:/prometheus
      - ./infrastructure/observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      backend:
        condition: service_started

  grafana:
    image: grafana/grafana:11.4.0
    profiles: ["observability"]
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SERVER_HTTP_PORT: 3001
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    ports:
      - "3001:3001"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/observability/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./infrastructure/observability/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      prometheus:
        condition: service_started

  frontend:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile.frontend
    profiles:
      - dev
      - staging
      - prod
    depends_on:
      backend:
        condition: service_started
    environment:
      VITE_API_BASE_URL: http://backend:8080/api/v1
    ports:
      - "3000:80"

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
