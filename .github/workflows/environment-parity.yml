name: Environment Parity

on:
  pull_request:
    paths:
      - 'infrastructure/**'
      - 'docker-compose.yml'
      - '.github/workflows/environment-parity.yml'
      - 'scripts/bootstrap-environment.sh'
      - 'backend-nodejs/**'
      - 'frontend-reactjs/**'
  push:
    branches: [main]
    paths:
      - 'infrastructure/**'
      - 'docker-compose.yml'
      - '.github/workflows/environment-parity.yml'
      - 'scripts/bootstrap-environment.sh'

permissions:
  contents: read
  packages: write

jobs:
  application-quality:
    name: Verify application quality gates
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.12.2'
          cache: 'npm'
      - name: Install workspace dependencies
        run: npm install --include-workspace-root
      - name: Run backend lint checks
        run: npm --workspace backend-nodejs run lint -- --max-warnings=0
      - name: Build frontend bundle
        run: npm --workspace frontend-reactjs run build
      - name: Run release readiness verification
        id: release_readiness
        run: |
          set +e
          npm run release:readiness
          status=$?
          echo "status=$status" >> "$GITHUB_OUTPUT"
          exit 0
      - name: Upload release readiness report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-readiness-report
          path: reports/release/readiness-summary.json
          if-no-files-found: warn
      - name: Summarise release readiness outcome
        if: always()
        run: |
          if [ "${{ steps.release_readiness.outputs.status }}" = "0" ]; then
            printf '✅ All release readiness gates passed.\n' >> "$GITHUB_STEP_SUMMARY"
          else
            printf '❌ Release readiness gates failed with exit code %s. See the attached readiness summary for details.\n' "${{ steps.release_readiness.outputs.status }}" >> "$GITHUB_STEP_SUMMARY"
          fi
      - name: Enforce release readiness gates
        if: steps.release_readiness.outputs.status != '0'
        run: exit 1

  terraform:
    name: Validate Terraform modules
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure/terraform/envs/dev
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      - run: terraform init -backend=false
      - run: terraform fmt -check -recursive
      - run: terraform validate
      - name: Render staging plan parity
        run: |
          terraform plan -var="project=parity" -var="container_image=public.ecr.aws/docker/library/node:20" -var="database_username=parity" -var="database_password=parity" -out=dev.plan
      - name: Validate staging module
        working-directory: infrastructure/terraform/envs/staging
        run: |
          terraform init -backend=false
          terraform validate
      - name: Validate production module
        working-directory: infrastructure/terraform/envs/prod
        run: |
          terraform init -backend=false
          terraform validate
      - name: TFLint
        uses: terraform-linters/setup-tflint@v4
      - run: |
          tflint --recursive

  docker:
    name: Build reference images
    runs-on: ubuntu-latest
    needs:
      - application-quality
    steps:
      - uses: actions/checkout@v4
      - name: Prepare backend pnpm lockfile
        working-directory: backend-nodejs
        run: |
          corepack enable
          corepack prepare pnpm@9.10.0 --activate
          pnpm import
          pnpm install --lockfile-only
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build backend
        run: |
          docker build -f infrastructure/docker/Dockerfile.backend -t ghcr.io/${{ github.repository }}/backend:test .
      - name: Build frontend
        run: |
          docker build -f infrastructure/docker/Dockerfile.frontend -t ghcr.io/${{ github.repository }}/frontend:test .

  policy:
    name: Security policy checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Trivy config scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: config
          format: table
          exit-code: '1'
          hide-progress: true
          severity: CRITICAL,HIGH
          skip-dirs: node_modules,build,dist
      - name: Shell lint
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          check_together: 'true'
          additional_files: scripts/bootstrap-environment.sh
