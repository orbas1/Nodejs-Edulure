server {
  listen 80;
  server_name _;
  root /usr/share/nginx/html;
  server_tokens off;

  set $cors_origin "";
  set $cors_allow_credentials "false";

  if ($http_origin ~* "^https?://([a-z0-9-]+\.)?edulure\.com(:[0-9]+)?$") {
    set $cors_origin $http_origin;
  }

  if ($http_origin ~* "^https?://localhost(:[0-9]+)?$") {
    set $cors_origin $http_origin;
  }

  if ($cors_origin != "") {
    set $cors_allow_credentials "true";
  }

  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
  add_header Cross-Origin-Opener-Policy "same-origin" always;
  add_header Cross-Origin-Embedder-Policy "require-corp" always;
  add_header Cross-Origin-Resource-Policy "same-origin" always;
  add_header Access-Control-Allow-Origin $cors_origin always;
  add_header Access-Control-Allow-Credentials $cors_allow_credentials always;
  add_header Access-Control-Allow-Methods "GET,HEAD,OPTIONS" always;
  add_header Access-Control-Allow-Headers "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-CSRF-Token" always;
  add_header Access-Control-Expose-Headers "Content-Length,Content-Type,ETag" always;
  add_header Vary "Origin" always;

  gzip on;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/javascript application/rss+xml application/xml text/javascript;
  gzip_vary on;

  if ($request_method = 'OPTIONS') {
    add_header Content-Length 0;
    add_header Content-Type text/plain;
    return 204;
  }

  location = /healthz {
    default_type text/plain;
    return 200 'ok';
  }

  location = /robots.txt {
    default_type text/plain;
    add_header Cache-Control "public, max-age=3600" always;
  }

  location ~* \.(?:js|mjs|css|png|jpg|jpeg|gif|svg|ico|webp|woff2?)$ {
    try_files $uri =404;
    add_header Cache-Control "public, max-age=31536000, immutable" always;
  }

  location ~* \.(?:json|txt|xml|webmanifest)$ {
    try_files $uri =404;
    add_header Cache-Control "public, max-age=86400" always;
  }

  location / {
    try_files $uri $uri/ /index.html;
    add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0" always;
  }
}
