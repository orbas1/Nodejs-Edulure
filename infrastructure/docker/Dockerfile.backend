# syntax=docker/dockerfile:1.6

ARG NODE_VERSION=20.11.1

FROM node:${NODE_VERSION}-bookworm-slim AS base
WORKDIR /app
ENV NODE_ENV=production

FROM base AS deps
COPY backend-nodejs/package.json backend-nodejs/package-lock.json ./
RUN npm ci --omit=dev

FROM node:${NODE_VERSION}-bookworm-slim AS runtime
WORKDIR /srv/app
ENV NODE_ENV=production
RUN apt-get update \
 && apt-get install -y --no-install-recommends curl tini \
 && rm -rf /var/lib/apt/lists/*
COPY --from=deps /app/node_modules ./node_modules
COPY backend-nodejs/package.json ./package.json
COPY backend-nodejs/package-lock.json ./package-lock.json
COPY backend-nodejs/knexfile.cjs ./knexfile.cjs
COPY backend-nodejs/src ./src
COPY backend-nodejs/scripts ./scripts
COPY backend-nodejs/migrations ./migrations
COPY backend-nodejs/database ./database
COPY backend-nodejs/seeds ./seeds
COPY backend-nodejs/vitest.config.mjs ./vitest.config.mjs

USER node
ENTRYPOINT ["/usr/bin/tini", "--"]
CMD ["node", "src/bin/web.js"]
EXPOSE 8080
HEALTHCHECK --interval=30s --timeout=5s --retries=3 CMD curl -f http://localhost:8080/health || exit 1
